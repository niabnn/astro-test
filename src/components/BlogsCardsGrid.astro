---
import { Card, CardContent, CardFooter, CardHeader } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { ExternalLink } from "lucide-react";

// WPPost interface
interface WPPost {
  id: number;
  slug: string;
  title: { rendered: string };
  excerpt: { rendered: string };
  _embedded?: {
    "wp:term"?: Array<Array<{ name: string }>>;
    "wp:featuredmedia"?: Array<{ source_url: string }>;
  };
}

// Project interface
interface Project {   
  id: number;
  title: string;
  category: string;
  description: string;
  image: string;
  tags: string[];
  slug: string;
}

// This is just in case I needed the API URL
const { apiUrl = "https://wp.tusanagustin.com/wp/wp-json/wp/v2/posts?_embed" } = Astro.props;

//Call API
const res = await fetch(apiUrl, { cache: "no-store" });
const posts: WPPost[] = await res.json();

// Transform the data to the componet model
const projects: Project[] = posts.map((post) => ({
  id: post.id,
  title: post.title.rendered,
  category: post._embedded?.["wp:term"]?.[0]?.[0]?.name || "Blog",
  description: post.excerpt.rendered.replace(/<[^>]+>/g, ""), // Here we remove HTML tags
  image: post._embedded?.["wp:featuredmedia"]?.[0]?.source_url || "https://via.placeholder.com/600x400",
  tags: post._embedded?.["wp:term"]?.[1]?.map((t) => t.name) || [],
  slug: post.slug
}));
---
    <div class="bg-background py-16 md:py-24">
      <div class="container mx-auto px-4 2xl:max-w-[1400px]">
<div class="grid grid-cols-1 gap-8 sm:grid-cols-2 lg:grid-cols-3">
{projects.map((project) => (
  <Card
    className="group  overflow-hidden pt-0 transition-all duration-300 "
  >
    <!-- Image -->
    <div class="relative aspect-video overflow-hidden">
      <img
        src={project.image}
        alt={project.title}
        class="object-cover w-full h-full transition-transform duration-500 group-hover:scale-105"
        loading="lazy"
      />
      <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent opacity-0 transition-opacity duration-300 group-hover:opacity-100"></div>
      <div class="absolute top-4 right-4 opacity-0 transition-opacity duration-300 group-hover:opacity-100">
        <span class="bg-primary/90 text-primary-foreground inline-block rounded-full px-3 py-1 text-xs font-medium backdrop-blur-sm">
          {project.category}
        </span>
      </div>
    </div>

    <!-- content -->
    <CardHeader>
      <h3 class="text-xl font-bold" set:html={project.title}></h3>
      <p class="text-muted-foreground mt-2 line-clamp-2">{project.description}</p>
    </CardHeader>

    <CardContent>
      <div class="flex flex-wrap gap-2">
        {project.tags.map((tag) => (
          <span
            class="bg-muted text-muted-foreground inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium"
          >
            {tag}
          </span>
        ))}
      </div>
    </CardContent>

    <!-- Button -->
    <CardFooter>
      <Button variant="secondary" className="w-full hover:scale-105">
        <a href={`/${project.slug}`} class="text-primary flex items-center w-full justify-center hover:scale-105">
          <span class="text-sm font-medium">Ver art√≠culo</span>
          <ExternalLink className="ml-1 h-4 w-4" />
        </a>
      </Button>
    </CardFooter>
  </Card>
))}
</div>
</div>

